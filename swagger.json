{
  "openapi": "3.0.0",
  "info": {
    "title": "Natours App",
    "description": "Natours apis' with all the filteration, including geo special queries",
    "version": "1.0.0"
  },
  "host": "localhost:21497",
	"schemes": ["http"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Return a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "mongoId"
            },
            "description": "User id to fetch the details"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        },
        "security": [
          { "bearerAuth": [] }
        ]
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "mongoId"
            },
            "description": "User id to update the details"
          }
        ],
        "requestBody": {
          "description": "Pass the value for update",
          "required": true,
          "content":{
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "hemant soni"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        },
        "security": [
          { "bearerAuth": [] }
        ]
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "mongoId"
            },
            "description": "User id to delete the user"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        },
        "security": [
          { "bearerAuth": [] }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses":{
      "UnauthorizedError":{
        "description": "Access token is missing or invalid"
      },
      "serverError":{
        "description": "Server error, please contact admin"
      }
    }
  }
}
